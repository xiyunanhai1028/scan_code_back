<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.cowain.mapper.OrderMapper">
    <insert id="insert" parameterType="Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, order_time, checkout_time,
                            pay_method, pay_status, amount, remark, phone,sit_num,user_ids)
        values (#{number}, #{status}, #{userId}, #{orderTime}, #{checkoutTime},
                #{payMethod}, #{payStatus}, #{amount}, #{remark}, #{phone},#{sitNum},#{userIds})
    </insert>
    <update id="update">
        update orders
        <set>
            <if test="cancelReason!=null and cancelReason!=''">
                cancel_reason = #{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="userIds != null">
                user_ids = #{userIds},
            </if>
            <if test="amount != null">
                amount = #{amount},
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="sumByMap" resultType="java.lang.Double">
        select sum(id) from orders
        <where>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="begin!=null">
                and order_time &gt; #{begin}
            </if>
            <if test="end!=null">
                and order_time &lt; #{end}
            </if>
        </where>
    </select>
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from orders
        <where>
            <if test="begin!=null">
                and order_time &gt; #{begin}
            </if>
            <if test="end!=null">
                and order_time &lt; #{end}
            </if>
            <if test="status!=null">
                and status = #{status}
            </if>
        </where>
    </select>
    <select id="getSalesTop10" resultType="org.cowain.dto.GoodsSalesDTO">
        select od.name,sum(od.number) number from orders o ,order_detail od
        where o.id = od.order_id and o.status = 5
        <if test="begin!=null">
            and o.order_time &gt; #{begin}
        </if>
        <if test="end!=null">
            and o.order_time &lt; #{end}
        </if>
        group by od.name
        order by number desc
        limit 0,10
    </select>
    <select id="pageQuery" resultType="org.cowain.entity.Orders">
        select * from orders
        <where>
            <if test="number != null and number!=''">
                and number like concat('%',#{number},'%')
            </if>
            <if test="phone != null and phone!=''">
                and phone like concat('%',#{phone},'%')
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
        </where>
        order by order_time desc
    </select>
    <select id="getOrdersByTimeLT" resultType="org.cowain.entity.Orders">
        select * from orders
        <where>
            <if test="startDateTime != null">
                and order_time &gt; #{startDateTime}
            </if>
            <if test="endDateTime != null">
                and order_time &lt; #{endDateTime}
            </if>
        </where>
    </select>
</mapper>